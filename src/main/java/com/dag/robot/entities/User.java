package com.dag.robot.entities;

// Generated 2015-5-20 18:46:20 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "db_expert_robot")
public class User implements java.io.Serializable {

	private Integer userId;
	private String account;
	private String password;
	private String nickname;
	private int auth;
	private Set<Expert> experts = new HashSet<Expert>(0);
	private Set<Topic> topics = new HashSet<Topic>(0);
	private Set<Field> fields = new HashSet<Field>(0);

	public User() {
	}

	public User(String account, String password, String nickname, int auth) {
		this.account = account;
		this.password = password;
		this.nickname = nickname;
		this.auth = auth;
	}

	public User(String account, String password, String nickname, int auth,
			Set<Expert> experts, Set<Topic> topics, Set<Field> fields) {
		this.account = account;
		this.password = password;
		this.nickname = nickname;
		this.auth = auth;
		this.experts = experts;
		this.topics = topics;
		this.fields = fields;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userId", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "account", nullable = false, length = 20)
	public String getAccount() {
		return this.account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	@Column(name = "password", nullable = false, length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "nickname", nullable = false, length = 20)
	public String getNickname() {
		return this.nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	@Column(name = "auth", nullable = false)
	public int getAuth() {
		return this.auth;
	}

	public void setAuth(int auth) {
		this.auth = auth;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "follow_user_expert", catalog = "db_expert_robot", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "expertId", nullable = false, updatable = false) })
	public Set<Expert> getExperts() {
		return this.experts;
	}

	public void setExperts(Set<Expert> experts) {
		this.experts = experts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "follow_user_topic", catalog = "db_expert_robot", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "topicId", nullable = false, updatable = false) })
	public Set<Topic> getTopics() {
		return this.topics;
	}

	public void setTopics(Set<Topic> topics) {
		this.topics = topics;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "follow_user_field", catalog = "db_expert_robot", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "fieldId", nullable = false, updatable = false) })
	public Set<Field> getFields() {
		return this.fields;
	}

	public void setFields(Set<Field> fields) {
		this.fields = fields;
	}

}
