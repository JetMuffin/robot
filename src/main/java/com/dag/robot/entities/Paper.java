package com.dag.robot.entities;

// Generated 2015-5-22 21:30:54 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Paper generated by hbm2java
 */
@Entity
@Table(name = "paper", catalog = "db_expert_robot")
public class Paper implements java.io.Serializable {

	private Integer paperId;
	private Conference conference;
	private Journal journal;
	private Orgnization orgnization;
	private String title;
	private String abs;
	private String keywords;
	private int referencedNum;
	private String type;
	private Date conferenceDate;
	private String issue;
	private Set<Topic> topics = new HashSet<Topic>(0);
	private Set<RelExpertPaper> relExpertPapers = new HashSet<RelExpertPaper>(0);
	private Set<CoreJournal> coreJournals = new HashSet<CoreJournal>(0);

	public Paper() {
	}

	public Paper(String title, String abs, String keywords, int referencedNum,
			String type) {
		this.title = title;
		this.abs = abs;
		this.keywords = keywords;
		this.referencedNum = referencedNum;
		this.type = type;
	}

	public Paper(Conference conference, Journal journal,
			Orgnization orgnization, String title, String abs, String keywords,
			int referencedNum, String type, Date conferenceDate, String issue,
			Set<Topic> topics, Set<RelExpertPaper> relExpertPapers,
			Set<CoreJournal> coreJournals) {
		this.conference = conference;
		this.journal = journal;
		this.orgnization = orgnization;
		this.title = title;
		this.abs = abs;
		this.keywords = keywords;
		this.referencedNum = referencedNum;
		this.type = type;
		this.conferenceDate = conferenceDate;
		this.issue = issue;
		this.topics = topics;
		this.relExpertPapers = relExpertPapers;
		this.coreJournals = coreJournals;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "paperId", unique = true, nullable = false)
	public Integer getPaperId() {
		return this.paperId;
	}

	public void setPaperId(Integer paperId) {
		this.paperId = paperId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conferenceId")
	public Conference getConference() {
		return this.conference;
	}

	public void setConference(Conference conference) {
		this.conference = conference;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "journalId")
	public Journal getJournal() {
		return this.journal;
	}

	public void setJournal(Journal journal) {
		this.journal = journal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "orgId")
	public Orgnization getOrgnization() {
		return this.orgnization;
	}

	public void setOrgnization(Orgnization orgnization) {
		this.orgnization = orgnization;
	}

	@Column(name = "title", nullable = false, length = 50)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "abs", nullable = false, length = 65535)
	public String getAbs() {
		return this.abs;
	}

	public void setAbs(String abs) {
		this.abs = abs;
	}

	@Column(name = "keywords", nullable = false, length = 65535)
	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	@Column(name = "referencedNum", nullable = false)
	public int getReferencedNum() {
		return this.referencedNum;
	}

	public void setReferencedNum(int referencedNum) {
		this.referencedNum = referencedNum;
	}

	@Column(name = "type", nullable = false, length = 50)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "conferenceDate", length = 10)
	public Date getConferenceDate() {
		return this.conferenceDate;
	}

	public void setConferenceDate(Date conferenceDate) {
		this.conferenceDate = conferenceDate;
	}

	@Column(name = "issue", length = 50)
	public String getIssue() {
		return this.issue;
	}

	public void setIssue(String issue) {
		this.issue = issue;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rel_paper_topic", catalog = "db_expert_robot", joinColumns = { @JoinColumn(name = "paperId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "topicId", nullable = false, updatable = false) })
	public Set<Topic> getTopics() {
		return this.topics;
	}

	public void setTopics(Set<Topic> topics) {
		this.topics = topics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paper")
	public Set<RelExpertPaper> getRelExpertPapers() {
		return this.relExpertPapers;
	}

	public void setRelExpertPapers(Set<RelExpertPaper> relExpertPapers) {
		this.relExpertPapers = relExpertPapers;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rel_paper_coreJounal", catalog = "db_expert_robot", joinColumns = { @JoinColumn(name = "paperId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "coreJournalId", nullable = false, updatable = false) })
	public Set<CoreJournal> getCoreJournals() {
		return this.coreJournals;
	}

	public void setCoreJournals(Set<CoreJournal> coreJournals) {
		this.coreJournals = coreJournals;
	}

}
